using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace OverSurgery
{
    class DatabaseConnection
    {
        #region ATTRIBUTES
        private string connectionStr;

        // The SqlCconnection object used to store the connection to
        // the database.
        SqlConnection connectionToDB;

        // The DataAdapter object used to open a table of the 
        // database.
        private SqlDataAdapter dataAdapter;

        // Creates an instance of the DatabaseConnection class.
        private static DatabaseConnection _instance;
        #endregion

        #region METHODS

        /// <summary>
        /// Open the connection.
        /// </summary>
        public void openConnection()
        {
            // Create the connection to the database as an instance of 
            // System.Data.SqlClient.SqlConnection.
            connectionToDB = new SqlConnection(connectionStr);

            // Opens the connection
            connectionToDB.Open();
        }

        /// <summary>
        /// Get the data set generated by the SQL statement.
        /// </summary>
        /// <param name="SqlStatement"></param>
        /// <returns>Returns the data set.</returns>
        public DataSet getDataSet(string SqlStatement)
        {
            DataSet dataSet;

            // Create the object dataAdapter to manipulate a table from the
            // database SurgeryDatabase specified by connectionToDB.
            dataAdapter = new SqlDataAdapter(SqlStatement, connectionToDB);

            // Create the dataset
            dataSet = new DataSet();
            dataAdapter.Fill(dataSet);

            // Return the dataset.
            return dataSet;
        }

        /// <summary>
        /// Close the connection.
        /// </summary>
        public void closeConnection()
        {
            // Closes the connection to the database.
            connectionToDB.Close();
        }

        public static DatabaseConnection getDatabaseConnectionInstance()
        {
            if (_instance == null)     
                _instance = new DatabaseConnection();
            
            return _instance;
        }
        #endregion

        #region CONSTRUCTORS

        // This constructor is specified in the lecture slides but is not 
        // used in the example. When used it breaks the getDatabaseConnectionInstance() method.
        // I have commented it out for now. (George)
        /*public DatabaseConnection(string connectionStr)
        {
            this.connectionStr = connectionStr;
        }*/
        #endregion
    }
}
